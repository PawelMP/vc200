<?xml version="1.0" encoding="UTF-8"?>
<launch>
    <!-- <rosparam file="$(find vc200_controller)/cfg/controllers.yaml" subst_value="true" command="load" /> -->

    <!-- <node name="controller_spawner" pkg="controller_manager" type="controller_manager" respawn="false" output="screen" args="spawn imu_sensor_controller" /> -->
    <arg name="robot_name" default="vc200" />

    <rosparam file="$(find vc200_controller)/cfg/controllers.yaml" subst_value="true" command="load" />

    <node name="robot_driver" pkg="vc200_controller" type="vc200_controller_node" output="screen" respawn="true">

        <rosparam file="$(find vc200_driver)/cfg/stm_config.yaml" subst_value="true" command="load" />
    </node>

<!--RPLIDAR-->

  <node name="rplidarNode"          pkg="rplidar_ros"  type="rplidarNode" output="screen">
  	<param name="serial_port"         type="string" value="/dev/ttyUSB0"/>  
  	<param name="serial_baudrate"     type="int"    value="115200"/>
  	<param name="frame_id"            type="string" value="laser"/>
  	<param name="inverted"            type="bool"   value="false"/>
  	<param name="angle_compensate"    type="bool"   value="true"/>
  </node>

<!--HECTOR - SLAM -->

  <arg name="geotiff_map_file_path" default="$(find hector_geotiff)/maps"/>

  <param name="/use_sim_time" value="false"/>

  <node pkg="rviz" type="rviz" name="rviz"
    args="-d $(find hector_slam_launch)/rviz_cfg/mapping_demo.rviz"/>

  <include file="$(find hector_mapping)/launch/mapping_default.launch"/>

  <include file="$(find hector_geotiff)/launch/geotiff_mapper.launch">
    <arg name="trajectory_source_frame_name" value="scanmatcher_frame"/>
    <arg name="map_file_path" value="$(arg geotiff_map_file_path)"/>
  </include>




    <!-- <node name="imu_sensor_controller_spawner" pkg="controller_manager" type="spawner" output="screen" args="imu_sensor_controller" /> -->

    <!-- <node name="imu_sensor_controller_spawner" pkg="controller_manager" type="spawner" output="screen" args="imu_sensor_controller" /> -->
    <!-- <node name="controller_spawner" pkg="controller_manager" type="controller_manager" respawn="false" output="screen" args="spawn 
        imu_sensor_controller 
        state 
        front_left_velocity
        front_right_velocity
        rear_left_velocity
        rear_right_velocity "/> -->

    <node name="controller_spawner" pkg="controller_manager" type="controller_manager" respawn="false" output="screen" args="spawn 
        imu_sensor_controller 
        state 
        diff_drive" />

    <include file="$(find vc200_description)/launch/model.launch"/>


</launch>
